@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Soma.Platform.Web.Services
@attribute [Authorize]
@inject IAuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Profile - SOMA Platform</PageTitle>

<div class="container my-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-person-circle me-2"></i>
                        My Profile
                    </h4>
                </div>
                <div class="card-body">
                    @if (userProfile != null)
                    {
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">First Name</label>
                                <p class="form-control-plaintext">@userProfile.FirstName</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">Last Name</label>
                                <p class="form-control-plaintext">@userProfile.LastName</p>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">Email Address</label>
                            <div class="d-flex align-items-center">
                                <p class="form-control-plaintext mb-0 me-2">@userProfile.Email</p>
                                @if (userProfile.EmailVerified)
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i>Verified
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">
                                        <i class="bi bi-exclamation-triangle me-1"></i>Not Verified
                                    </span>
                                }
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(userProfile.PhoneNumber))
                        {
                            <div class="mb-3">
                                <label class="form-label fw-bold">Phone Number</label>
                                <div class="d-flex align-items-center">
                                    <p class="form-control-plaintext mb-0 me-2">@userProfile.PhoneNumber</p>
                                    @if (userProfile.PhoneVerified)
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle me-1"></i>Verified
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="bi bi-exclamation-triangle me-1"></i>Not Verified
                                        </span>
                                    }
                                </div>
                            </div>
                        }

                        <div class="mb-3">
                            <label class="form-label fw-bold">Two-Factor Authentication</label>
                            <div class="d-flex align-items-center">
                                @if (userProfile.TwoFactorEnabled)
                                {
                                    <span class="badge bg-success me-2">
                                        <i class="bi bi-shield-check me-1"></i>Enabled
                                    </span>
                                    <button class="btn btn-outline-danger btn-sm" @onclick="Toggle2FA">
                                        Disable 2FA
                                    </button>
                                }
                                else
                                {
                                    <span class="badge bg-warning me-2">
                                        <i class="bi bi-shield-exclamation me-1"></i>Disabled
                                    </span>
                                    <button class="btn btn-outline-success btn-sm" @onclick="Toggle2FA">
                                        Enable 2FA
                                    </button>
                                }
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">Account Created</label>
                                <p class="form-control-plaintext">@userProfile.CreatedAt.ToString("MMMM dd, yyyy")</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">Last Login</label>
                                <p class="form-control-plaintext">
                                    @if (userProfile.LastLoginAt.HasValue)
                                    {
                                        @userProfile.LastLoginAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Never</span>
                                    }
                                </p>
                            </div>
                        </div>

                        <hr class="my-4">

                        <div class="d-flex gap-2">
                            <button class="btn btn-primary">
                                <i class="bi bi-pencil me-1"></i>
                                Edit Profile
                            </button>
                            <button class="btn btn-outline-secondary">
                                <i class="bi bi-key me-1"></i>
                                Change Password
                            </button>
                            <button class="btn btn-outline-danger" @onclick="HandleLogout">
                                <i class="bi bi-box-arrow-right me-1"></i>
                                Logout
                            </button>
                        </div>
                    }
                    else if (isLoading)
                    {
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading profile...</p>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger" role="alert">
                            <h5 class="alert-heading">Unable to load profile</h5>
                            <p>There was an error loading your profile information. Please try refreshing the page.</p>
                            <hr>
                            <button class="btn btn-outline-danger" @onclick="LoadProfile">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                Retry
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserProfile? userProfile;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProfile();
    }

    private async Task LoadProfile()
    {
        try
        {
            isLoading = true;
            userProfile = await AuthService.GetProfileAsync();
        }
        catch (Exception ex)
        {
            // Handle error
            userProfile = null;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task Toggle2FA()
    {
        // TODO: Implement 2FA toggle functionality
        // This would involve calling the API to enable/disable 2FA
        // For now, just show a placeholder message
        await Task.Delay(100); // Placeholder
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/");
    }
}